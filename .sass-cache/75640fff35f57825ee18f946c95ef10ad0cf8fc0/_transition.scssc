3.1.5 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :@has_childrenT:@children[o:Sass::Tree::ImportNode
;i;0:@imported_filename"shared;@;
[ o:Sass::Tree::CommentNode;i:@lines[ ;@:
@loud0;
[ :@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */:@silenti o:Sass::Tree::VariableNode;i:
@expro:Sass::Script::String	;i;@:
@type:identifier;"all:
@name" default-transition-property;@;
[ :@guarded"!defaulto;;i;o:Sass::Script::Number:@original"1s;i;@:@denominator_units[ :@numerator_units["s;i;" default-transition-duration;@;
[ ;"!defaulto;;i;o:Sass::Script::Bool;i;@;F;" default-transition-function;@;
[ ;"!defaulto;;i;o;;i;@;F;"default-transition-delay;@;
[ ;"!defaulto;;i;o:Sass::Script::List	;i;{ :@separator:
comma;[o;	;i;@;;;"transformo;	;i;@;;;"transform-origin;"#transitionable-prefixed-values;@;
[ ;"!defaulto;;i!;[ ;@;0;
[ ;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i o:Sass::Tree::MixinDefNode;i0;"transition-property;@;	T:
@args[[o:Sass::Script::Variable;"property-1;{ :@underscored_name"property_1o;#	;i&;" default-transition-property;@>;$" default_transition_property[o;#;"property-2;@>;$"property_2o;;i';@>;F[o;#;"property-3;@>;$"property_3o;;i(;@>;F[o;#;"property-4;@>;$"property_4o;;i);@>;F[o;#;"property-5;@>;$"property_5o;;i*;@>;F[o;#;"property-6;@>;$"property_6o;;i+;@>;F[o;#;"property-7;@>;$"property_7o;;i,;@>;F[o;#;"property-8;@>;$"property_8o;;i-;@>;F[o;#;"property-9;@>;$"property_9o;;i.;@>;F[o;#;"property-10;@>;$"property_10o;;i/;@>;F;
[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:
@linei1:@operand2o:Sass::Script::String	;i1:@options{ :
@type:identifier:@value"string;	@:@operand1o:Sass::Script::Funcall
;i1:@keywords{ :
@name"type-of;	@:
@args[o:Sass::Script::Variable	;i1;"property-1;	@:@underscored_name"property_1:@operator:eq0[o:Sass::Tree::VariableNode;i1:
@expro;
;i1;{ ;"unquote;	@;[o;	;i1;"property-1;	@;"property_1;"property-1;	@:@children[ :@guarded0o;;i2;o:Sass::Script::Funcall
;i2:@keywords{ ;"compact;@;"[o;#	;i2;"property-1;@;$"property_1o;#	;i2;"property-2;@;$"property_2o;#	;i2;"property-3;@;$"property_3o;#	;i2;"property-4;@;$"property_4o;#	;i2;"property-5;@;$"property_5o;#	;i2;"property-6;@;$"property_6o;#	;i2;"property-7;@;$"property_7o;#	;i2;"property-8;@;$"property_8o;#	;i2;"property-9;@;$"property_9o;#	;i2;"property-10;@;$"property_10;"properties;@;
[ ;0u;%¼[o:Sass::Script::Variable	:
@linei3:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode;i3;[" -webkit-transition-property;@:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::Funcall
;i3:@keywords{ ;"prefixed-for-transition;@:
@args[o:Sass::Script::String	;i3;@:
@type:identifier;"-webkito; 	;i3;"properties;@;	"propertiesu;%¸[o:Sass::Script::Variable	:
@linei4:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode;i4;["-moz-transition-property;@:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::Funcall
;i4:@keywords{ ;"prefixed-for-transition;@:
@args[o:Sass::Script::String	;i4;@:
@type:identifier;"	-mozo; 	;i4;"properties;@;	"propertiesu;%°[o:Sass::Script::Variable	:
@linei5:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode;i5;["-o-transition-property;@:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::Funcall
;i5:@keywords{ ;"prefixed-for-transition;@:
@args[o:Sass::Script::String	;i5;@:
@type:identifier;"-oo; 	;i5;"properties;@;	"propertieso:Sass::Tree::PropNode;i6;["transition-property;@:
@tabsi ;
[ :@prop_syntax:new;o;#	;i6;"properties;@;$"propertieso;;i9;[ ;@;0;
[ ;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i o;!;iH;"transition-duration;@;	T;"[[o;#;"duration-1;{ ;$"duration_1o;#	;i>;" default-transition-duration;@¦;$" default_transition_duration[o;#;"duration-2;@¦;$"duration_2o;;i?;@¦;F[o;#;"duration-3;@¦;$"duration_3o;;i@;@¦;F[o;#;"duration-4;@¦;$"duration_4o;;iA;@¦;F[o;#;"duration-5;@¦;$"duration_5o;;iB;@¦;F[o;#;"duration-6;@¦;$"duration_6o;;iC;@¦;F[o;#;"duration-7;@¦;$"duration_7o;;iD;@¦;F[o;#;"duration-8;@¦;$"duration_8o;;iE;@¦;F[o;#;"duration-9;@¦;$"duration_9o;;iF;@¦;F[o;#;"duration-10;@¦;$"duration_10o;;iG;@¦;F;
[u;%Í[o:Sass::Script::Operation
:
@lineiI:@operand2o:Sass::Script::String	;iI:@options{ :
@type:identifier:@value"string;	@:@operand1o:Sass::Script::Funcall
;iI:@keywords{ :
@name"type-of;	@:
@args[o:Sass::Script::Variable	;iI;"duration-1;	@:@underscored_name"duration_1:@operator:eq0[o:Sass::Tree::VariableNode;iI:
@expro;
;iI;{ ;"unquote;	@;[o;	;iI;"duration-1;	@;"duration_1;"duration-1;	@:@children[ :@guarded0o;;iJ;o;&
;iJ;'{ ;"compact;@;"[o;#	;iJ;"duration-1;@;$"duration_1o;#	;iJ;"duration-2;@;$"duration_2o;#	;iJ;"duration-3;@;$"duration_3o;#	;iJ;"duration-4;@;$"duration_4o;#	;iJ;"duration-5;@;$"duration_5o;#	;iJ;"duration-6;@;$"duration_6o;#	;iJ;"duration-7;@;$"duration_7o;#	;iJ;"duration-8;@;$"duration_8o;#	;iJ;"duration-9;@;$"duration_9o;#	;iJ;"duration-10;@;$"duration_10;"durations;@;
[ ;0o:Sass::Tree::MixinNode;iM;'{ ;"experimental;@;"[o;	;iK;@;;;"transition-durationo;#	;iK;"durations;@;$"durationso;	;iL;@;;;"	-mozo;	;iL;@;;;"-webkito;	;iL;@;;;"-oo:!Sass::Script::UnaryOperation	;iL;@:@operando;	;iL;@;;;"-ms:@operator:noto;-	;iL;@;.o;	;iL;@;;;"-khtml;/;0o;	;iL;@;;;"official;
[ o;;iP;[ ;@;0;
[ ;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;i o;!;i`;"transition-timing-function;@;	T;"[[o;#;"function-1;{ ;$"function_1o;#	;iV;" default-transition-function;@!;$" default_transition_function[o;#;"function-2;@!;$"function_2o;;iW;@!;F[o;#;"function-3;@!;$"function_3o;;iX;@!;F[o;#;"function-4;@!;$"function_4o;;iY;@!;F[o;#;"function-5;@!;$"function_5o;;iZ;@!;F[o;#;"function-6;@!;$"function_6o;;i[;@!;F[o;#;"function-7;@!;$"function_7o;;i\;@!;F[o;#;"function-8;@!;$"function_8o;;i];@!;F[o;#;"function-9;@!;$"function_9o;;i^;@!;F[o;#;"function-10;@!;$"function_10o;;i_;@!;F;
[o;;ia;o;&
;ia;'{ ;"unquote;@;"[o;#	;ia;"function-1;@;$"function_1;"function-1;@;
[ ;0o;;ib;o;&
;ib;'{ ;"compact;@;"[o;#	;ib;"function-1;@;$"function_1o;#	;ib;"function-2;@;$"function_2o;#	;ib;"function-3;@;$"function_3o;#	;ib;"function-4;@;$"function_4o;#	;ib;"function-5;@;$"function_5o;#	;ib;"function-6;@;$"function_6o;#	;ib;"function-7;@;$"function_7o;#	;ib;"function-8;@;$"function_8o;#	;ib;"function-9;@;$"function_9o;#	;ib;"function-10;@;$"function_10;"functions;@;
[ ;0o;,;ie;'{ ;"experimental;@;"[o;	;ic;@;;;"transition-timing-functiono;#	;ic;"functions;@;$"functionso;	;id;@;;;"	-mozo;	;id;@;;;"-webkito;	;id;@;;;"-oo;-	;id;@;.o;	;id;@;;;"-ms;/;0o;-	;id;@;.o;	;id;@;;;"-khtml;/;0o;	;id;@;;;"official;
[ o;;ih;[ ;@;0;
[ ;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;i o;!;iw;"transition-delay;@;	T;"[[o;#;"delay-1;{ ;$"delay_1o;#	;im;"default-transition-delay;@¥;$"default_transition_delay[o;#;"delay-2;@¥;$"delay_2o;;in;@¥;F[o;#;"delay-3;@¥;$"delay_3o;;io;@¥;F[o;#;"delay-4;@¥;$"delay_4o;;ip;@¥;F[o;#;"delay-5;@¥;$"delay_5o;;iq;@¥;F[o;#;"delay-6;@¥;$"delay_6o;;ir;@¥;F[o;#;"delay-7;@¥;$"delay_7o;;is;@¥;F[o;#;"delay-8;@¥;$"delay_8o;;it;@¥;F[o;#;"delay-9;@¥;$"delay_9o;;iu;@¥;F[o;#;"delay-10;@¥;$"delay_10o;;iv;@¥;F;
[u;%¾[o:Sass::Script::Operation
:
@lineix:@operand2o:Sass::Script::String	;ix:@options{ :
@type:identifier:@value"string;	@:@operand1o:Sass::Script::Funcall
;ix:@keywords{ :
@name"type-of;	@:
@args[o:Sass::Script::Variable	;ix;"delay-1;	@:@underscored_name"delay_1:@operator:eq0[o:Sass::Tree::VariableNode;ix:
@expro;
;ix;{ ;"unquote;	@;[o;	;ix;"delay-1;	@;"delay_1;"delay-1;	@:@children[ :@guarded0o;;iy;o;&
;iy;'{ ;"compact;@;"[o;#	;iy;"delay-1;@;$"delay_1o;#	;iy;"delay-2;@;$"delay_2o;#	;iy;"delay-3;@;$"delay_3o;#	;iy;"delay-4;@;$"delay_4o;#	;iy;"delay-5;@;$"delay_5o;#	;iy;"delay-6;@;$"delay_6o;#	;iy;"delay-7;@;$"delay_7o;#	;iy;"delay-8;@;$"delay_8o;#	;iy;"delay-9;@;$"delay_9o;#	;iy;"delay-10;@;$"delay_10;"delays;@;
[ ;0o;,;i|;'{ ;"experimental;@;"[o;	;iz;@;;;"transition-delayo;#	;iz;"delays;@;$"delayso;	;i{;@;;;"	-mozo;	;i{;@;;;"-webkito;	;i{;@;;;"-oo;-	;i{;@;.o;	;i{;@;;;"-ms;/;0o;-	;i{;@;.o;	;i{;@;;;"-khtml;/;0o;	;i{;@;;;"official;
[ o;;i;[ ;@;0;
[ ;"*/* Transition all-in-one shorthand */;i o;!;i;"single-transition;@;	T;"[	[o;#;"property;{ ;$"propertyo;#	;i};" default-transition-property;@ ;$" default_transition_property[o;#;"duration;@ ;$"durationo;#	;i~;" default-transition-duration;@ ;$" default_transition_duration[o;#;"function;@ ;$"functiono;#	;i;" default-transition-function;@ ;$" default_transition_function[o;#;"
delay;@ ;$"
delayo;#	;i;"default-transition-delay;@ ;$"default_transition_delay;
[o;,;i;'{ ;"transition;@;"[o;&
;i;'{ ;"compact;@;"[o;	;i;@;:
space;[	o;#	;i;"property;@;$"propertyo;#	;i;"duration;@;$"durationo;#	;i;"function;@;$"functiono;#	;i;"
delay;@;$"
delay;
[ o;!;i;"transition;@;	T;"[[o;#;"transition-1;{ ;$"transition_1o;	;i;@X;;;"default[o;#;"transition-2;@X;$"transition_2o;;i;@X;F[o;#;"transition-3;@X;$"transition_3o;;i;@X;F[o;#;"transition-4;@X;$"transition_4o;;i;@X;F[o;#;"transition-5;@X;$"transition_5o;;i;@X;F[o;#;"transition-6;@X;$"transition_6o;;i;@X;F[o;#;"transition-7;@X;$"transition_7o;;i;@X;F[o;#;"transition-8;@X;$"transition_8o;;i;@X;F[o;#;"transition-9;@X;$"transition_9o;;i;@X;F[o;#;"transition-10;@X;$"transition_10o;;i;@X;F;
[u;%î[o:Sass::Script::Operation
:
@linei:@operand2o:Sass::Script::String	;i:@options{ :
@type:identifier:@value"default;	@:@operand1o:Sass::Script::Variable	;i:
@name"transition-1;	@:@underscored_name"transition_1:@operator:eq0[o:Sass::Tree::VariableNode;i:
@expro:Sass::Script::Funcall
;i:@keywords{ ;"compact;	@:
@args[o:Sass::Script::List	;i;	@:@separator:
space;[	o;	;i;" default-transition-property;	@;" default_transition_propertyo;	;i;" default-transition-duration;	@;" default_transition_durationo;	;i;" default-transition-function;	@;" default_transition_functiono;	;i;"default-transition-delay;	@;"default_transition_delay;"transition-1;	@:@children[ :@guarded0o;;i;o;;i;@;F;"transitions;@;
[ ;0u;%g[o:Sass::Script::Operation
:
@linei:@operand2o; 
;i;o:Sass::Script::String	;i:@options{ :
@type:identifier:@value"	list;	@	:@operand1o:Sass::Script::Funcall
;i:@keywords{ :
@name"type-of;	@	:
@args[o;
;i;{ ;"nth;	@	;[o:Sass::Script::Variable	;i;"transition-1;	@	:@underscored_name"transition_1o:Sass::Script::Number:@original"1;i;	@	:@denominator_units[ :@numerator_units[ ;i:@operator:eq;	@	;o; 
;i;o;	;i;	@	;
;;"	list;	@	;o;
;i;{ ;"type-of;	@	;[o;	;i;"transition-1;	@	;"transition_1;;;:andu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@linei:
@expro:Sass::Script::Funcall
;i:@keywords{ :
@name"compact:@options{ :
@args[o:Sass::Script::Variable	;i;
"transition-1;@:@underscored_name"transition_1o;	;i;
"transition-2;@;"transition_2o;	;i;
"transition-3;@;"transition_3o;	;i;
"transition-4;@;"transition_4o;	;i;
"transition-5;@;"transition_5o;	;i;
"transition-6;@;"transition_6o;	;i;
"transition-7;@;"transition_7o;	;i;
"transition-8;@;"transition_8o;	;i;
"transition-9;@;"transition_9o;	;i;
"transition-10;@;"transition_10;
"transitions;@:@children[ :@guarded0[o:Sass::Tree::VariableNode;i:
@expro;
;i;{ ;"	join;	@	;[o;	;i;"transition-1;	@	;"transition_1o;
;i;{ ;"compact;	@	;[o;	;i;"transition-2;	@	;"transition_2o;	;i;"transition-3;	@	;"transition_3o;	;i;"transition-4;	@	;"transition_4o;	;i;"transition-5;	@	;"transition_5o;	;i;"transition-6;	@	;"transition_6o;	;i;"transition-7;	@	;"transition_7o;	;i;"transition-8;	@	;"transition_8o;	;i;"transition-9;	@	;"transition_9o;	;i;"transition-10;	@	;"transition_10o;	;i;	@	;
;;"
comma;"transitions;	@	:@children[ :@guarded0o;;i;o;&
;i;'{ ;"comma-list;@;"[ ;"delays;@;
[ ;0o;;i;o;;i;@;F;"has-delays;@;
[ ;0o;;i;o;&
;i;'{ ;"comma-list;@;"[ ;"webkit-value;@;
[ ;0o;;i;o;&
;i;'{ ;"comma-list;@;"[ ;"moz-value;@;
[ ;0o;;i;o;&
;i;'{ ;"comma-list;@;"[ ;"o-value;@;
[ ;0o;;i ;[ ;@;0;
[ ;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i o:Sass::Tree::EachNode;i¢;@;	T:	@var"transition;
[o;;i£;[ ;@;0;
[ ;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i o;;i¥;o;&
;i¥;'{ ;"nth;@;"[o;#	;i¥;"transition;@;$"transitiono;;"1;i¥;@;[ ;[ ;i;"property;@;
[ ;0o;;i¦;o;;i¦;@;F;"duration;@;
[ ;0o;;i§;o;;i§;@;F;"timing-function;@;
[ ;0o;;i¨;o;;i¨;@;F;"
delay;@;
[ ;0u;%
[o:Sass::Script::Operation
:
@linei©:@operand2o:Sass::Script::Number:@original"1;i©:@options{ :@denominator_units[ :@numerator_units[ :@valuei;
@	:@operand1o:Sass::Script::Funcall
;i©:@keywords{ :
@name"length;
@	:
@args[o:Sass::Script::Variable	;i©;"transition;
@	:@underscored_name"transition:@operator:gt0[o:Sass::Tree::VariableNode;i©:
@expro;
;i©;{ ;"nth;
@	;[o;	;i©;"transition;
@	;"transitiono;;	"2;i©;
@	;@
;[ ;i;"duration;
@	:@children[ :@guarded0u;%[o:Sass::Script::Operation
:
@lineiª:@operand2o:Sass::Script::Number:@original"2;iª:@options{ :@denominator_units[ :@numerator_units[ :@valuei;
@	:@operand1o:Sass::Script::Funcall
;iª:@keywords{ :
@name"length;
@	:
@args[o:Sass::Script::Variable	;iª;"transition;
@	:@underscored_name"transition:@operator:gt0[o:Sass::Tree::VariableNode;iª:
@expro;
;iª;{ ;"nth;
@	;[o;	;iª;"transition;
@	;"transitiono;;	"3;iª;
@	;@
;[ ;i;"timing-function;
@	:@children[ :@guarded0u;%M[o:Sass::Script::Operation
:
@linei«:@operand2o:Sass::Script::Number:@original"3;i«:@options{ :@denominator_units[ :@numerator_units[ :@valuei;
@	:@operand1o:Sass::Script::Funcall
;i«:@keywords{ :
@name"length;
@	:
@args[o:Sass::Script::Variable	;i«;"transition;
@	:@underscored_name"transition:@operator:gt0[o:Sass::Tree::VariableNode;i«:
@expro;
;i«;{ ;"nth;
@	;[o;	;i«;"transition;
@	;"transitiono;;	"4;i«;
@	;@
;[ ;i	;"
delay;
@	:@children[ :@guarded0o;;i«;o:Sass::Script::Bool;i«;
@	;T;"has-delays;
@	;[ ;0o;;i­;[ ;@;0;
[ ;";/* If a delay is provided without a timing function */;i u;%^[o:Sass::Script::Operation
:
@linei®:@operand2o:!Sass::Script::UnaryOperation	;i®:@options{ :@operando:Sass::Script::Variable	;i®:
@name"
delay;	@:@underscored_name"
delay:@operator:not;	@:@operand1o:Sass::Script::Funcall
;i®:@keywords{ ;"is-time;	@:
@args[o;	;i®;"timing-function;	@;"timing_function;:and0[o:Sass::Tree::VariableNode;i®:
@expro;	;i®;"timing-function;	@;"timing_function;"
delay;	@:@children[ :@guarded0o;;i®;o:Sass::Script::Bool;i®;	@:@valueF;"timing-function;	@;[ ;0o;;i®;o;;i®;	@;T;"has-delays;	@;[ ;0o;;i°;[ ;@;0;
[ ;"9/* Keep a list of delays in case one is specified */;i o;;i±;o;&
;i±;'{ ;"append;@;"[o;#	;i±;"delays;@;$"delayso;&
;i±;'{ ;"if;@;"[o;#	;i±;"
delay;@;$"
delayo;#	;i±;"
delay;@;$"
delayo;;"0s;i±;@;[ ;["s;i ;"delays;@;
[ ;0o;;i³;o;&
;i³;'{ ;"append;@;"[o;#	;i³;"webkit-value;@;$"webkit_valueo;&
;i³;'{ ;"compact;@;"[o;	;i³;@;;1;[o;&
;i³;'{ ;"prefixed-for-transition;@;"[o;	;i³;@;;;"-webkito;#	;i³;"property;@;$"propertyo;#	;i³;"duration;@;$"durationo;#	;i³;"timing-function;@;$"timing_function;"webkit-value;@;
[ ;0o;;i´;o;&
;i´;'{ ;"append;@;"[o;#	;i´;"moz-value;@;$"moz_valueo;&
;i´;'{ ;"compact;@;"[o;	;i´;@;;1;[	o;&
;i´;'{ ;"prefixed-for-transition;@;"[o;	;i´;@;;;"	-mozo;#	;i´;"property;@;$"propertyo;#	;i´;"duration;@;$"durationo;#	;i´;"timing-function;@;$"timing_functiono;#	;i´;"
delay;@;$"
delay;"moz-value;@;
[ ;0o;;iµ;o;&
;iµ;'{ ;"append;@;"[o;#	;iµ;"o-value;@;$"o_valueo;&
;iµ;'{ ;"compact;@;"[o;	;iµ;@;;1;[	o;&
;iµ;'{ ;"prefixed-for-transition;@;"[o;	;iµ;@;;;"-oo;#	;iµ;"property;@;$"propertyo;#	;iµ;"duration;@;$"durationo;#	;iµ;"timing-function;@;$"timing_functiono;#	;iµ;"
delay;@;$"
delay;"o-value;@;
[ ;0:
@listo;#	;i¢;"transitions;@;$"transitionsu;%é[o:Sass::Script::Variable	:
@linei¸:
@name"$experimental-support-for-webkit:@options{ :@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode;i¸;["-webkit-transition;@:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;i¸;"webkit-value;@;	"webkit_valueo:Sass::Tree::CommentNode;i¹:@lines[ ;@:
@loud0;[ ;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */:@silenti u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:
@name"has-delays:@options{ :@underscored_name"has_delays0[o:Sass::Tree::PropNode;iº;["-webkit-transition-delay;@:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;iº;"delays;@;	"delaysu;%#[o:Sass::Script::Variable	:
@linei»:
@name"%experimental-support-for-mozilla:@options{ :@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode;i»;["-moz-transition;@:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;i»;"moz-value;@;	"moz_valueu;%[o:Sass::Script::Variable	:
@linei¼:
@name"#experimental-support-for-opera:@options{ :@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode;i¼;["-o-transition;@:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;i¼;"o-value;@;	"o_valueo;(;i½;["transition;@;)i ;
[ ;*;+;o;#	;i½;"transitions;@;$"transitionso;;iÀ;[ ;@;0;
[ ;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;i o:Sass::Tree::FunctionNode;iÁ;"comma-list;@;	T;"[[o;#;"	list;{ ;$"	listo;	;iÁ;@t;;1;[ ;
[o:Sass::Tree::ReturnNode	;iÂ;o;&
;iÂ;'{ ;"	join;@;"[o;	;iÂ;@;;1;[ o;#	;iÂ;"	list;@;$"	listo;	;iÂ;@;;;"
comma;@;
[ o;;iÅ;[ ;@;0;
[ ;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;i o;5;iÆ;"prefixed-for-transition;@;	T;"[[o;#;"prefix;{ ;$"prefix0[o;#;"property;@;$"property0;
[u;%[o:Sass::Script::Operation
:
@lineiÇ:@operand2o:Sass::Script::String	;iÇ:@options{ :
@type:identifier:@value"	list;	@:@operand1o:Sass::Script::Funcall
;iÇ:@keywords{ :
@name"type-of;	@:
@args[o:Sass::Script::Variable	;iÇ;"property;	@:@underscored_name"property:@operator:equ:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@lineiÎ:@keywords{ :
@name"
index:@options{ :
@args[o:Sass::Script::Variable	;iÎ;"#transitionable-prefixed-values;	@	:@underscored_name"#transitionable_prefixed_valueso;	;iÎ;"property;	@	;"propertyu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	;iÑ:
@name"property:@options{ :@underscored_name"property;
@
:@children[ [o:Sass::Tree::ReturnNode	;iÏ:
@expro: Sass::Script::Interpolation;iÏ:@whitespace_beforei;	@	:@aftero;;iÏ;0;	@	;0:@originally_textF:	@mido;	;iÏ;"property;	@	;"property:@whitespace_after0:@beforeo;;iÏ;0;	@	;0;:originally_text;o:Sass::Script::String	;iÏ;	@	:
@type:identifier:@value"-;F;0;F;o;	;iÏ;"prefix;	@	;"prefix;0;0;	@	:@children[ [o:Sass::Tree::VariableNode;iÈ:
@expro;
;iÈ;{ ;"comma-list;	@;[ ;"new-list;	@:@children[ :@guarded0o:Sass::Tree::EachNode;iÉ;	@:@has_childrenT:	@var"v;[o;;iÊ;o;
;iÊ;{ ;"append;	@;[o;	;iÊ;"new-list;	@;"new_listo;
;iÊ;{ ;"prefixed-for-transition;	@;[o;	;iÊ;"prefix;	@;"prefixo;	;iÊ;"v;	@;"v;"new-list;	@;[ ;0:
@listo;	;iÉ;"property;	@;"propertyo:Sass::Tree::ReturnNode	;iÌ;o;	;iÌ;"new-list;	@;"new_list;	@;[ o;;iÖ;[ ;@;0;
[ ;"7/* Checks if the value given is a unit of time. */;i o;5;i×;"is-time;@;	T;"[[o;#;"
value;{ ;$"
value0;
[u;%ù[o:Sass::Script::Operation
:
@lineiØ:@operand2o:Sass::Script::String	;iØ:@options{ :
@type:identifier:@value"number;	@:@operand1o:Sass::Script::Funcall
;iØ:@keywords{ :
@name"type-of;	@:
@args[o:Sass::Script::Variable	;iØ;"
value;	@:@underscored_name"
value:@operator:equ:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool;iÛ:@options{ :@valueF;	@	:@children[ [o:Sass::Tree::ReturnNode	;iÙ:
@expro:!Sass::Script::UnaryOperation	;iÙ;	@:@operando;	;iÙ;	@;o;
;iÙ;{ ;"
index;	@;[o:Sass::Script::List	;iÙ;	@:@separator:
space;[o;	;iÙ;	@;
;;"so;	;iÙ;	@;
;;"mso;
;iÙ;{ ;"	unit;	@;[o;	;iÙ;"
value;	@;"
value;:not;;;	@:@children[ 